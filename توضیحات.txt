
الگوریتم پیشنهادی
1- اولین پل قبل و اولین پل بعد و نیز اولین اسکله ی قبل و اولین اسکله  ی بعد از هر خانه را مشخص می کنیم 
*با توجه به مرتب و غیر نزولی بودن لیست ورودی ها اگر تعداد خانه ها m, تعداد مغازه ها n,  تعداد پل ها p,  وتعداد اسکله ها q باشد، مرتبه ی زمانی گام 1با لحاظ ضریب مخفی 2 چنین است:
Time order = O( m + p + q )
2- برای یافتن کمترین فاصله زمانی بین خانه m1 و مغازه n1 از چهار مسیر ممکن از طریق 2 پل قبل و بعد  و 2 اسکله ی قبل و بعد از خانه m1 که در گام 1 به دست آوردیم 4 فاصله ی زمانی بین m1 و n1 محاسبه می شود که کمترین این چهار نتیجه جواب مساله است.
* به عنوان مثال فاصله ی زمانی بین m1 و n1 از طریق پل p1 از فرمول زیر محاسبه می شود:
t = 4 + d1 + d2  که در آن d1 و d2 به ترتیب فاصله ی m1 تا p1 و فاصله ی  n1 تا p1 هستند.
و یا فاصله ی زمانی بین m1 و n1 از طریق اسکله q1 از فرمول زیر محاسبه می شود:
t = 4 + 2(d1 + d2)  که در آن d1 و d2 به ترتیب فاصله ی m1 تا q1 و فاصله ی  n1 تا q1 هستند.
اکنون گام 2 را برای سایر خانه ها و مغازه های باقی مانده انجام می دهیم که در این صورت مرتبه ی زمانی انجام آن با لحاظ ضریب مخفی 4 به شکل m*n خواهد بود.
توضیح :
در مورد به دست آوردن پل ها و اسکله های قبل و بعد، اگر تعداد مغازه ها کمتر از خانه ها باشد می توان به جای محاسبه ی محل پل ها و اسکله های قبل و بعد از خانه ها همین کار را در مورد مغازه ها انجام داد که در آن صورت مرتبه ی زمانی این گام کمی  بهبود می یابد و به شکل O(n + p + q)  در می آید.
در مورد چالش اول:
چون واژه خیلی زیاد دراینجا به عدد یا نسبت خاصی اشاره نمی کند به عنوان مثال  فرض می کنیم بیش از 60 درصد از طول رودخانه دارای پل و یا اسکله است. در حالتی که توزیع پل ها و اسکله ها تقریبا یکنواخت نباشد تاثیر چندانی در بهبود نتیجه نخواهد داشت، اما اگر توزیع نسبتا یکنواخت باشد می توان انتظار داشت که از هر 10 واحد لگو بیش از 6 واحد مجهز به پل یا اسکله و به نسبت از هر 10 واحد 3 واحد یا بیشتر  به پل مجهز باشد که در این صورت می توان از نقش اسکله ها مگر در حالتی که اسکله مستقیما یک خانه را به یک مغازه متصل می کند صرف نظر کرد و صرفا با اتکا بر پل ها مساله را حل کرد که کاهش قابل ملاحظه ای در زمان اجرا الگوریتم خواهد داشت.
چالش دوم:
در حالتی که مثلا فقط 2 رودخانه وجود داشته باشد می توانیم  برای خانه ی اول تمام نقاط دارای پل یا اسکله را به عنوان مبدا انتخاب کنیم و آنگاه فاصله ی زمانی مینیموم برای هریک از این نقاط را طبق الگوریتمی که برای مساله اصلی ارائه شد تا مغازه ها محاسبه کنیم و به همین ترتیب برای خانه های بعد. و برای رودخانه های بیشتر نیز نقاط پل واسکله های روی رود دوم را به عنوان مبدا برای رود سوم در نظر بگیریم و ....
در واقع در اینجا به نوعی از الگوریتم دایکسترا در مورد کوتاه ترین مسیر ها بین تمام نقاط گراف با داشتن اطلاعاتی اضافی استفاده می کنیم که مرتبه ی زمانی را نسبت به الگوریتم اصلی کاهش می دهد.
تو ضیح این که در این پیشنهاد فرض بر این است که در صورت انتخاب دوچرخه از خانه در بین راه امکان استفاده از قایق وجود ندارد و بالعکس ، یعنی نوع وسیله از خانه تا مغازه مقصد قابل تغییر نیست.
در حالتی که تعداد پل ها واسکله ها خیلی زیاد باشد ( مثلا بیش از 60 درصد) با فرض مطرح شده در قسمت چالش 1 شاید بشود از اسکله ها به جز در موارد خاص صرف نظر کرد.
به جز موارد مطرح شده فوق در مواردی که تعداد رودخانه ها زیاد باشد با توجه به افزایش قابل توجه مرتبه ی زمانی الگوریتم های اپتیمال دقیق، شاید با پذیرش درصدی خطا بتوانیم از الگوریتمهای تقریبی و روشهای approximation استفاده کنیم.
